{"version":3,"file":"games-engine.js","mappings":"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AM,K,EACrB,KAAW,E,C/C2crB,Q,gBgDleuD,QAAZ,GAAQ,E,sBAWiE,O,KAApE,IAF5B,I,GAE4B,G,OAAoC,KAAd,KAA8C,C,gBAU7C,OAAxB,QAAiB,K,kBChB3B,O,KAAlC,G,KAHI,GAGc,G,KAFd,E,gCjDyZgF,EAAlC,KAAW,IA1ZjC,GA0Z6C,I,EiD1Z1C,EjD0ZqD,EAAlC,KAAW,IAxZjD,GAwZ6D,I,EiDzZ1C,E,+BCJ/B,W,oBA+BA,aAAc,GAFd,YACA,W,sBAcgC,aAAoB,QAClB,mB,sEA1ByB,aAAc,G,MnDJzB,EAAnB,EAAmB,WAAyB,EAAX,MAAd,EAAc,KAAd,EAAc,WmDKiB,W,eCoD3E,O,ShErDkG,EAAvC,GAAiB,MA6DwvB,GA7DvuB,M,EgEqDvE,GAAtB,E,qBAtEiF,Y,gBAGS,M1B0T9C,iB,E0B1T8C,I1B0TnC,gB,qB0BpTuC,mC,gBAGV,kC,gBAGG,kC,gBAGN,kC,gBAGM,kC,gBAGG,kC,gBAGD,qB,gBAGC,kC,gBAGQ,yB,gBAGS,mB1ByOhE,G,E0BzOgE,I1ByOhC,iBAAhB,EAAE,Q,qB0BtO2C,mB1ByOhE,G,E0BzOgE,E1ByOhD,cAAsC,cAAhB,EAAE,Q,qB0BtOsB,gB1BoO9D,G0BpO8D,E1BoO9C,U,gB0BjOkD,gB1BkOjE,G0BlOiE,E1BkOjD,W,gB0B/N2C,gB1BiO7D,G0BjO6D,E1BiO7C,W,gB0B9N2C,mB1BiO1D,G,E0BjO0D,I1BiO1B,cAAhB,EAAE,Q,qB0B9NkD,gB1B4NnE,G0B5NmE,E1B4NnD,a,gB0BzNsD,gB1B0NrE,G0B1NqE,E1B0NrD,a,4B1BpR7B,OoDClB,mBAA8D,MAAM,I,MpDI3E,OoDDU,mBAAiE,SAAS,IAGzE,e,MpDEmF,QoDCnF,mBAAmE,UAAU,I,MpDIvD,OoDDzB,mBAA+D,OAAO,I,MpDK7D,OoDFR,mBAAgE,QAAQ,I,MpDM9D,OoDHZ,mBAA8D,MAAM,I,MpDQ7D,OoDLL,mBAAgE,QAAQ,I,MpDWrF,OoDRc,mBAAiE,SAAS,I,MpDWE,MoDR7E,mBAAkE,QAAQ,I,MpDQmJ,OoDL5N,mBAAiE,SAAS,I,MpDKsS,MoDF7W,mBAAm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","sources":["webpack://games-engine/webpack/universalModuleDefinition","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/common/src/generated/_Collections.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/model/CompositeDrawer.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/GameWord.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/dispatcher/ObjectsDispatcher.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/drawers/ImagesDrawer.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/drawers/ObjPositionDrawer.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/image/Images.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/Maps.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/Collections.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/util/Standard.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/text/Strings.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/index/ObjectsSquareIndex.kt","webpack://games-engine/../../../../../builtins/Library.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/internal/IdSequence.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/model/Obj.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/model/Vector.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/model/ZeroLengthVector.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/render/HtmlCanvas2dRenderer.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/shapes/IndexGrid.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/shapes/Pointer.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/games/Main.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/games/zombie/ZombieGame.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/games/balloons/BalloonsGame.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/games/wiggly_worm/WigglyWorm.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/dynamic.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/math.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/games/zombie/objects/KotlinSign.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/games/zombie/objects/PlayerObj.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/games/zombie/objects/Ghost.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/MutableCollections.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/common/src/generated/_Sequences.kt","webpack://games-engine/../../../../src/main/kotlin/tga/gaming/engine/index/SquareIndex.kt","webpack://games-engine/../../../../../<js-code>","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/common/src/generated/_Arrays.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/LinkedHashSet.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/LinkedHashMap.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/Sets.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/Sequences.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractMap.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/ArrayList.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/HashSet.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/internal/progressionUtil.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/random/Random.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/random/XorWowRandom.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/util/Preconditions.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/ranges/PrimitiveRanges.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/ranges/ProgressionIterators.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/ranges/Progressions.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/text/Appendable.kt","webpack://games-engine/../../../../../runtime/typeCheckUtils.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/reflect/JsClass.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/reflect/reflection.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/text/Char.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/text/char.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/text/StringNumberConversions.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/text/numberConversions.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/text/stringsCode.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/text/string.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/common/src/generated/_Ranges.kt","webpack://games-engine/../../../../../runtime/noPackageHacks.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/runtime/primitiveCompanionObjects.kt","webpack://games-engine/../../../../../runtime/kotlinHacks.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableCollection.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableList.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableMap.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableSet.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/HashMap.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/InternalHashCodeMap.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/console.kt","webpack://games-engine/../../../../../src/kotlin/numbers_js-ir.kt","webpack://games-engine/../../../../../runtime/long.kt","webpack://games-engine/../../../../../runtime/bitUtils.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/numbers.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/random/PlatformRandom.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/reflect/KClassImpl.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/reflect/primitives.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/text/StringBuilderJs.kt","webpack://games-engine/../../../../../src/generated/_DigitChars.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/CharCode.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/text/regex.kt","webpack://games-engine/../../../../../builtins/Char.kt","webpack://games-engine/../../../../../runtime/arrays.kt","webpack://games-engine/../../../../../runtime/charSequence.kt","webpack://games-engine/../../../../../runtime/numberConversion.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/unsigned/src/kotlin/UShort.kt","webpack://games-engine/../../../../../runtime/collectionsHacks.kt","webpack://games-engine/../../../../../runtime/coreRuntime.kt","webpack://games-engine/../../../../../runtime/hacks.kt","webpack://games-engine/../../../../../runtime/longjs.kt","webpack://games-engine/../../../../../runtime/rangeTo.kt","webpack://games-engine/../../../../../src/kotlin/exceptions.kt","webpack://games-engine/../../../../../src/kotlin/jsOperators.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractCollection.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractList.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractSet.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/collections/PrimitiveIterators.kt","webpack://games-engine/../../../../../jsMainSources/core/builtins/src/kotlin/Unit.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/EqualityComparator.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/common/src/generated/_Strings.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/src/kotlin/text/StringBuilder.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/regexp.kt","webpack://games-engine/../../../../../jsMainSources/libraries/stdlib/js/src/kotlin/collections/InternalMap.kt","webpack://games-engine/../../../../../commonMainSources/libraries/stdlib/common/src/kotlin/MathH.kt","webpack://games-engine/webpack/bootstrap","webpack://games-engine/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"games-engine\"] = factory();\n\telse\n\t\troot[\"games-engine\"] = factory();\n})(this, () => {\nreturn ",null,"package tga.gaming.engine.model\n\nimport org.w3c.dom.CanvasRenderingContext2D\n\nclass CompositeItemDoNotReferToTheObject : RuntimeException(\"This composite item is not for this object\")\n\n\ninterface CompositeDrawer : Drawable {\n\n    val drawers: MutableList<Drawer>\n    fun add(drawer: Drawer) {\n        if (drawer.obj != this) throw CompositeItemDoNotReferToTheObject()\n        drawers.add(drawer)\n    }\n\n    override fun draw(ctx: CanvasRenderingContext2D) {\n        drawers.forEach { it.draw(ctx) }\n    }\n}\n\ninterface Drawer : ObjCompanion {\n    fun draw(ctx: CanvasRenderingContext2D)\n}\n\n","package tga.gaming.engine\n\nimport kotlinx.browser.window\nimport org.w3c.dom.HTMLCanvasElement\nimport org.w3c.dom.events.KeyboardEvent\nimport org.w3c.dom.events.MouseEvent\nimport org.w3c.dom.pointerevents.PointerEvent\nimport tga.gaming.engine.dispatcher.Dispatcher\nimport tga.gaming.engine.render.GameRenderer\n\nopen class GameWord(\n    val canvas: HTMLCanvasElement,\n    val dispatcher: Dispatcher,\n    val renderer: GameRenderer,\n    var turnDurationMillis: Int = 10\n) {\n\n    private var gameLoopHandler: Int = -1\n\n    var active: Boolean = false\n        private set\n\n    open fun startGame() {\n        run()\n    }\n\n    fun run() {\n        if (active) return\n        console.log(\"run()\")\n        active = true\n        runEventListeners()\n        gameLoopHandler = window.setInterval(this::gameLoop, turnDurationMillis)\n        window.setTimeout(\n            { this.paint(window.performance.now()) },\n            turnDurationMillis + turnDurationMillis / 2\n        )\n    }\n\n    fun pause() {\n        console.log(\"pause()\")\n        active = false\n        if (gameLoopHandler != -1) window.clearInterval(gameLoopHandler)\n        gameLoopHandler = -1\n        stopEventListeners()\n    }\n\n    private fun runEventListeners() {\n        window.onmousemove = {me: MouseEvent -> propagateOnMouseMove(me)  }\n        window.onmousedown = {me: MouseEvent -> propagateOnMouseDown(me)  }\n        window.onmouseup   = {me: MouseEvent -> propagateOnMouseUp(me)    }\n        window.onmouseenter= {me: MouseEvent -> propagateOnMouseEnter(me) }\n        window.onmouseleave= {me: MouseEvent -> propagateOnMouseLeave(me) }\n\n        window.ongotpointercapture  = { pe: PointerEvent -> propagateOnGotPointerCapture(pe) }\n        window.onlostpointercapture = { pe: PointerEvent -> propagateOnLostPointerCapture(pe) }\n        window.onpointerdown        = { pe: PointerEvent -> propagateOnPointerDown(pe) }\n        window.onpointermove        = { pe: PointerEvent -> propagateOnPointerMove(pe) }\n        window.onpointerup          = { pe: PointerEvent -> propagateOnPointerUp(pe) }\n        window.onpointercancel      = { pe: PointerEvent -> propagateOnPointerCancel(pe) }\n        window.onpointerover        = { pe: PointerEvent -> propagateOnPointerOver(pe) }\n        window.onpointerout         = { pe: PointerEvent -> propagateOnPointerOut(pe) }\n        window.onpointerenter       = { pe: PointerEvent -> propagateOnPointerEnter(pe) }\n        window.onpointerleave       = { pe: PointerEvent -> propagateOnPointerLeave(pe) }\n\n        window.onclick   = {me: MouseEvent -> propagateOnClick(me) }\n        window.ondblclick= {me: MouseEvent -> propagateOnDblClick(me) }\n\n        window.onkeypress  = {ke: KeyboardEvent -> propagateOnKeyPress(ke) }\n        window.onkeydown   = {ke: KeyboardEvent -> propagateOnKeyDown(ke)  }\n        window.onkeyup     = {ke: KeyboardEvent -> propagateOnKeyUp(ke)    }\n\n    }\n\n    open fun propagateOnMouseMove (me: MouseEvent) { dispatcher.onMouseMove (me) }\n    open fun propagateOnMouseDown (me: MouseEvent) { dispatcher.onMouseDown (me) }\n    open fun propagateOnMouseUp   (me: MouseEvent) { dispatcher.onMouseUp   (me) }\n    open fun propagateOnMouseEnter(me: MouseEvent) { dispatcher.onMouseEnter(me) }\n    open fun propagateOnMouseLeave(me: MouseEvent) { dispatcher.onMouseLeave(me) }\n\n    open fun propagateOnGotPointerCapture (pe: PointerEvent){ dispatcher.onGotPointerCapture(pe) }\n    open fun propagateOnLostPointerCapture(pe: PointerEvent){ dispatcher.onLostPointerCapture(pe) }\n    open fun propagateOnPointerDown       (pe: PointerEvent){ dispatcher.onPointerDown(pe) }\n    open fun propagateOnPointerMove       (pe: PointerEvent){ dispatcher.onPointerMove(pe) }\n    open fun propagateOnPointerUp         (pe: PointerEvent){ dispatcher.onPointerUp(pe) }\n    open fun propagateOnPointerCancel     (pe: PointerEvent){ dispatcher.onPointerCancel(pe) }\n    open fun propagateOnPointerOver       (pe: PointerEvent){ dispatcher.onPointerOver(pe) }\n    open fun propagateOnPointerOut        (pe: PointerEvent){ dispatcher.onPointerOut(pe) }\n    open fun propagateOnPointerEnter      (pe: PointerEvent){ dispatcher.onPointerEnter(pe) }\n    open fun propagateOnPointerLeave      (pe: PointerEvent){ dispatcher.onPointerLeave(pe) }\n\n    open fun propagateOnClick   (me: MouseEvent) { dispatcher.onClick   (me) }\n    open fun propagateOnDblClick(me: MouseEvent) { dispatcher.onDblClick(me) }\n\n    open fun propagateOnKeyDown  (ke: KeyboardEvent) { dispatcher.onKeyDown  (ke) }\n    open fun propagateOnKeyUp    (ke: KeyboardEvent) { dispatcher.onKeyUp    (ke) }\n    open fun propagateOnKeyPress (ke: KeyboardEvent) {\n        handleCommonKeys(ke)\n        dispatcher.onKeyPress (ke)\n    }\n\n    private fun handleCommonKeys(keyboardEvent: KeyboardEvent) {\n        when (keyboardEvent.code) {\n            \"KeyP\" -> pause()\n            \"KeyR\" -> run()\n        }\n    }\n\n    private fun stopEventListeners() {\n        //TODO(\"Not yet implemented\")\n    }\n\n    private var turnsCounter: Long = 0\n    open fun gameLoop() {\n        if (!active) return\n\n        turnsCounter++\n        //val startedAtMillis = window.performance.now()\n\n        dispatcher.turn()\n\n        //val finishedAtMillis = window.performance.now()\n        //var nextRunIn = turnDurationMillis - (finishedAtMillis - startedAtMillis).toInt()\n        //if (nextRunIn < 0) nextRunIn = 0\n\n        //window.setTimeout(this::gameLoop, nextRunIn)\n    }\n\n    private var framesCounter: Long = 0\n    open fun paint(t: Double) {\n        if (!active) return\n\n        framesCounter++\n        renderer.paint()\n\n        window.requestAnimationFrame( this::paint )\n    }\n\n    fun finishGame() {\n        pause()\n        dispatcher.finishGame()\n    }\n\n}\n","package tga.gaming.engine.dispatcher\n\nimport org.w3c.dom.events.KeyboardEvent\nimport org.w3c.dom.events.MouseEvent\nimport org.w3c.dom.pointerevents.PointerEvent\nimport tga.gaming.engine.index.SquareIndex\nimport tga.gaming.engine.model.Actionable\nimport tga.gaming.engine.model.Moveable\nimport tga.gaming.engine.model.Obj\n\ninterface Dispatcher : GameTurner, GameObjects, EventsListener\n\nopen class ObjectsDispatcher(\n    override val index: SquareIndex\n) : Dispatcher {\n    override val objects: MutableSet<Obj> = HashSet()\n\n    override fun turn() {\n        addNewObjects()\n        doMove()\n        update2dIndex()\n        doAct()\n        removeDeletedObjects()\n\n        movedObjects.clear()\n        objectToAdd.clear()\n        objectToDel.clear()\n    }\n\n    private val movedObjects = ArrayList<Obj>()\n    private fun doMove() {\n        objects.forEach {\n            if (it is Moveable) {\n                val oldPosition = it.p.copy()\n                it.move()\n                if (it.p != oldPosition) movedObjects += it\n            }\n        }\n\n    }\n\n    private fun update2dIndex() {\n        if (movedObjects.isNotEmpty()) index.update(movedObjects)\n    }\n\n    private fun doAct() {\n        objects.forEach {\n            if (it is Actionable) it.act()\n        }\n    }\n\n    private fun removeDeletedObjects() {\n        if (objectToDel.isNotEmpty()) {\n            objects.removeAll(objectToDel)\n            index.remove(objectToDel)\n        }\n    }\n\n    private fun addNewObjects() {\n        if (objectToAdd.isNotEmpty()) {\n            objects.addAll(objectToAdd)\n            objectToAdd.forEach { it.dispatcher = this }\n            index.update(objectToAdd)\n        }\n    }\n\n    private val objectToAdd = ArrayList<Obj>()\n    override fun <T: Obj> addObj(obj: T): T {\n        objectToAdd.add(obj)\n        return obj\n    }\n\n    private val objectToDel = HashSet<Obj>()\n    override fun <T: Obj> delObj(obj: T): T {\n        objectToDel.add(obj)\n        return obj\n    }\n\n    override fun finishGame() {\n        objects.clear()\n        index.reset()\n    }\n\n    override fun onMouseMove (me: MouseEvent){ objects.forEach { if (it is EventsListener) it.onMouseMove (me) } }\n    override fun onMouseDown (me: MouseEvent){ objects.forEach { if (it is EventsListener) it.onMouseDown (me) } }\n    override fun onMouseUp   (me: MouseEvent){ objects.forEach { if (it is EventsListener) it.onMouseUp   (me) } }\n    override fun onMouseEnter(me: MouseEvent){ objects.forEach { if (it is EventsListener) it.onMouseEnter(me) } }\n    override fun onMouseLeave(me: MouseEvent){ objects.forEach { if (it is EventsListener) it.onMouseLeave(me) } }\n\n    override fun onGotPointerCapture (pe: PointerEvent){ objects.forEach { if (it is EventsListener) it.onGotPointerCapture(pe) } }\n    override fun onLostPointerCapture(pe: PointerEvent){ objects.forEach { if (it is EventsListener) it.onLostPointerCapture(pe) } }\n    override fun onPointerDown       (pe: PointerEvent){ objects.forEach { if (it is EventsListener) it.onPointerDown(pe) } }\n    override fun onPointerMove       (pe: PointerEvent){ objects.forEach { if (it is EventsListener) it.onPointerMove(pe) } }\n    override fun onPointerUp         (pe: PointerEvent){ objects.forEach { if (it is EventsListener) it.onPointerUp(pe) } }\n    override fun onPointerCancel     (pe: PointerEvent){ objects.forEach { if (it is EventsListener) it.onPointerCancel(pe) } }\n    override fun onPointerOver       (pe: PointerEvent){ objects.forEach { if (it is EventsListener) it.onPointerOver(pe) } }\n    override fun onPointerOut        (pe: PointerEvent){ objects.forEach { if (it is EventsListener) it.onPointerOut(pe) } }\n    override fun onPointerEnter      (pe: PointerEvent){ objects.forEach { if (it is EventsListener) it.onPointerEnter(pe) } }\n    override fun onPointerLeave      (pe: PointerEvent){ objects.forEach { if (it is EventsListener) it.onPointerLeave(pe) } }\n\n    override fun onClick   (me: MouseEvent){ objects.forEach { if (it is EventsListener) it.onClick   (me) } }\n    override fun onDblClick(me: MouseEvent){ objects.forEach { if (it is EventsListener) it.onDblClick(me) } }\n\n    override fun onKeyPress(ke: KeyboardEvent) { objects.forEach { if (it is EventsListener) it.onKeyPress(ke) } }\n    override fun onKeyDown (ke: KeyboardEvent) { objects.forEach { if (it is EventsListener) it.onKeyDown (ke) } }\n    override fun onKeyUp   (ke: KeyboardEvent) { objects.forEach { if (it is EventsListener) it.onKeyUp   (ke) } }\n\n\n\n}\n\n\n","package tga.gaming.engine.drawers\n\nimport org.w3c.dom.CanvasRenderingContext2D\nimport org.w3c.dom.Image\nimport tga.gaming.engine.model.CompositeDrawer\nimport tga.gaming.engine.model.Drawer\nimport tga.gaming.engine.model.Obj\n\nclass ImagesDrawer(\n    override val obj: Obj,\n    var imageIndex: Int,\n    private val images: List<Image>\n) : Drawer {\n\n    fun nextImage() {\n        imageIndex += 1\n        if (imageIndex == images.size) imageIndex = 0\n    }\n\n    override fun draw(ctx: CanvasRenderingContext2D) {\n        val f = obj.frame ?: return\n\n        val image = when {\n            imageIndex < 0            -> images.first()\n            imageIndex >= images.size -> images.last()\n            else -> images[imageIndex]\n        }\n\n        ctx.drawImage(image, f.p0.x, f.p0.y, f.width, f.height)\n    }\n\n}\n\nfun CompositeDrawer.withImageDrawer(img: Image): ImagesDrawer {\n    return withImagesDrawer(listOf(img))\n}\n\nfun CompositeDrawer.withImagesDrawer(images: List<Image>, imageIndex: Int = 0): ImagesDrawer {\n    val imagesDrawer = ImagesDrawer(\n        obj = this as Obj,\n        imageIndex = imageIndex,\n        images = images\n    )\n\n    this.drawers.add(imagesDrawer)\n\n    return imagesDrawer\n}\n","package tga.gaming.engine.drawers\n\nimport org.w3c.dom.CanvasRenderingContext2D\nimport tga.gaming.engine.model.CompositeDrawer\nimport tga.gaming.engine.model.Drawer\nimport tga.gaming.engine.model.Obj\nimport kotlin.math.PI\n\nclass ObjPositionDrawer(\n    override val obj: Obj,\n    private val radius: Double,\n    private val strokeStyle: String\n) : Drawer {\n    override fun draw(ctx: CanvasRenderingContext2D) {\n        ctx.beginPath()\n        ctx.strokeStyle = strokeStyle\n        ctx.arc(0.0, 0.0, radius, 0.0, PI2)\n        ctx.stroke()\n    }\n\n    companion object {\n        const val PI2 = PI * 2\n    }\n}\n\nfun CompositeDrawer.withObjPositionDrawer(radius: Double = 5.0, strokeStyle: String = \"aquamarine\") {\n    this.drawers.add(ObjPositionDrawer(this as Obj, radius, strokeStyle))\n}\n","package tga.gaming.engine.image\n\nimport kotlinx.browser.window\nimport org.w3c.dom.Image\n\nval imagesCache = HashMap<String, Image>()\n\nfun loadImage(path: String): Image {\n    var image: Image? = imagesCache[path]\n    if (image != null) return image\n\n    image = window.document.createElement(\"img\") as Image\n    image.src = path\n\n    imagesCache[path] = image\n    return image\n}\n\nfun loadImages(imgSrcTemplate: String, numberOfImages: Int): List<Image> {\n    return List(numberOfImages) {\n        loadImage(imgSrcTemplate.replaceFirst(Regex(\"<n>\"), \"$it\"))\n    }\n}\n\n",null,null,null,null,"package tga.gaming.engine.index\n\nimport tga.gaming.engine.model.Frame\nimport tga.gaming.engine.model.Obj\nimport tga.gaming.engine.model.Vector\n\nprivate const val sizeFactor: Int    = 6           // square size == 64\nconst val gridStep  : Int    = (1 shl sizeFactor)  // 64\nconst val gridStepD : Double = gridStep.toDouble() // 64.0\n\nclass ObjectsSquareIndex(\n    wordSize: Vector\n) : SquareIndex {\n\n    override val lines  : Int = wordSize.y.toInt() shr sizeFactor\n    override val columns: Int = wordSize.x.toInt() shr sizeFactor\n    override val matrix = Array<Array<MutableSet<Obj>>>(lines){ Array(columns) { HashSet() } }\n\n    private val maxLinesIndex = lines - 1\n    private val maxColumnsIndex = columns - 1\n\n    private val positionsRangeByObj: MutableMap<Obj, PositionsRange2D> = HashMap()\n\n    override fun update(obj: Obj) {\n        val prev: PositionsRange2D? = positionsRangeByObj[obj]\n        val curr: PositionsRange2D? = rangeOfObject(obj.p, obj.frame)\n\n        if ( prev == curr ) return\n        if ( curr == null) { remove(obj); return }\n\n        prev?.forEachExcept(curr) { it.remove(obj) }\n        curr.forEachExcept(prev) { it.add(obj) }\n\n        positionsRangeByObj[obj] = curr\n    }\n\n    override fun remove(obj: Obj) {\n        val prev: PositionsRange2D? = positionsRangeByObj[obj]\n        prev?.forEach { it.remove(obj) }\n    }\n\n    override fun reset() {\n        PositionsRange2D(0,0, lines-1, columns-1).forEach { cell -> cell.clear() }\n    }\n\n    override fun objectsOnTheSamePlaceWith(obj: Obj): Sequence<Obj> {\n        val positionsRange = positionsRangeByObj[obj] ?: return emptySequence()\n\n        val objects = HashSet<Obj>()\n        positionsRange.forEach {\n            objects.addAll(it)\n        }\n\n        return objects.asSequence().filter { it !== obj }\n    }\n\n    private fun PositionsRange2D.forEachExcept(except: PositionsRange2D?, body: (MutableSet<Obj>) -> Unit) {\n        if (except == null) {\n            this.forEach(body)\n            return\n        }\n\n        for (l in lin0 .. lin1) {\n            val lin = matrix[l]\n            for (c in col0..col1) {\n                if ( !(l in except.lin0..except.lin1 && c in except.col0..except.col1) ) {\n                    body(lin[c])\n                }\n            }\n        }\n\n    }\n\n    private fun PositionsRange2D.forEach(body: (MutableSet<Obj>) -> Unit) {\n        for (l in lin0 .. lin1) {\n            val line = matrix[l]\n            for (c in col0..col1)\n                body(line[c])\n        }\n\n    }\n\n    private fun rangeOfObject(position: Vector, frame: Frame?): PositionsRange2D? {\n        if (frame == null) return null\n\n        val y0 = (position.y + frame.p0.y)\n        val x0 = (position.x + frame.p0.x)\n        val y1 = (position.y + frame.p1.y)\n        val x1 = (position.x + frame.p1.x)\n\n        var l0 = y0.toInt() shr sizeFactor\n        var c0 = x0.toInt() shr sizeFactor\n        var l1 = y1.toInt() shr sizeFactor\n        var c1 = x1.toInt() shr sizeFactor\n\n        if ((l0<0 && l1<0) || (l0>=lines   && l1>=lines  )) return null\n        if ((c0<0 && c1<0) || (c0>=columns && c1>=columns)) return null\n\n        if (l0<0) l0 = 0; if (l0>=lines) l0 = maxLinesIndex\n        if (l1<0) l1 = 0; if (l1>=lines) l1 = maxLinesIndex\n\n        if (c0<0) c0 = 0; if (c0>=columns) c0 = maxColumnsIndex\n        if (c1<0) c1 = 0; if (c1>=columns) c1 = maxColumnsIndex\n\n        return PositionsRange2D(lin0 = l0, col0 = c0, lin1 = l1, col1 = c1 )\n    }\n\n}\n\ndata class PositionsRange2D(\n    val lin0: Int,\n    val col0: Int,\n    val lin1: Int,\n    val col1: Int\n)\n",null,"package tga.gaming.engine.internal\n\nobject IdSequence {\n\n    private var currentId: Long = 0L\n\n    fun next(): Long {\n        return ++currentId\n    }\n}\n","package tga.gaming.engine.model\n\nimport tga.gaming.engine.dispatcher.GameObjects\nimport tga.gaming.engine.internal.IdSequence\n\nopen class Obj(\n    open val p: Vector = Vector(),\n    open var angle: Double = 0.0,\n    open var scale: Double = 1.0,\n    open var r: Double = 10.0,\n    open val frame: Frame? = Frame( v(-r,-r), v(r,r)),\n) {\n    val id: Long = IdSequence.next()\n    lateinit var dispatcher: GameObjects\n\n    override fun equals(other: Any?): Boolean {\n        if (this === other) return true\n        if (other !is Obj) return false\n        if (id != other.id) return false\n        return true\n    }\n\n    override fun hashCode(): Int {\n        return id.hashCode()\n    }\n}\n\n","package tga.gaming.engine.model\n\nimport kotlin.math.PI\nimport kotlin.math.acos\nimport kotlin.math.asin\nimport kotlin.math.sqrt\nimport kotlin.random.Random.Default.nextDouble\n\n\ndata class Vector(\n    var x: Double = 0.0,\n    var y: Double = 0.0\n) {\n    private var cachedLen :Double? = null\n\n    var len: Double\n        get() {\n            if (cachedLen == null) calculateLength()\n            return cachedLen!!\n        }\n        set(value) {\n            assignLength(value)\n        }\n\n    operator fun plusAssign(n: Int   ) { x+=n;   y+=n  ; cachedLen = null; }\n    operator fun plusAssign(n: Double) { x+=n;   y+=n  ; cachedLen = null; }\n    operator fun plusAssign(v: Vector) { x+=v.x; y+=v.y; cachedLen = null; }\n\n    operator fun minusAssign(n: Int   ) { x-=n;   y-=n  ; cachedLen = null; }\n    operator fun minusAssign(n: Double) { x-=n;   y-=n  ; cachedLen = null; }\n    operator fun minusAssign(v: Vector) { x-=v.x; y-=v.y; cachedLen = null; }\n\n    operator fun timesAssign(n: Int)    { x*=n;   y*=n  ; if (cachedLen != null) cachedLen = cachedLen!! * n; }\n    operator fun timesAssign(n: Double) { x*=n;   y*=n  ; if (cachedLen != null) cachedLen = cachedLen!! * n; }\n\n    operator fun plus(n: Int   ) = Vector(x+n,   y+n)\n    operator fun plus(n: Double) = Vector(x+n,   y+n)\n    operator fun plus(v: Vector) = Vector(x+v.x, y+v.y)\n\n    operator fun minus(n: Int   ) = Vector(x-n,   y-n)\n    operator fun minus(n: Double) = Vector(x-n,   y-n)\n    operator fun minus(v: Vector) = Vector(x-v.x, y-v.y)\n\n    operator fun times(n: Int   ) = Vector(x*n,   y*n)\n    operator fun times(n: Double) = Vector(x*n,   y*n)\n    operator fun times(v: Vector) = Vector(x*v.x, y*v.y)\n\n    operator fun div(n: Int   ) = Vector(x/n, y/n)\n    operator fun div(n: Double) = Vector(x/n, y/n)\n\n    fun set(x: Double, y: Double) { this.x=  x; this.y =   y; cachedLen = null; }\n    fun set(v: Vector           ) { this.x=v.x; this.y = v.y; cachedLen = null; }\n\n    /**\n     * restore angle by vector v, only for len(v) = 1\n     */\n    fun angle(): Double {\n        return when {\n            (x == 0.0) -> if (y > 0) angle_90 else angle_270\n            (y == 0.0) -> if (x > 0) angle_0  else angle_180\n\n            (x >  0.0      ) -> asin(this.y)\n            (x < 0 && y > 0) -> acos(this.x)\n\n            else -> -acos(this.x)\n        }\n    }\n\n    fun assignLength(desiredLength: Double): Vector {\n        cachedLen = null\n        when {\n            (x == 0.0) -> y = if (y >= 0) desiredLength else -desiredLength\n            (y == 0.0) -> x = if (x >= 0) desiredLength else -desiredLength\n            else -> {\n                val k = desiredLength / len\n                x *= k\n                y *= k\n            }\n        }\n        cachedLen = desiredLength\n        return this\n    }\n\n    private fun calculateLength() {\n        cachedLen = when {\n            (x == 0.0) -> y\n            (y == 0.0) -> x\n            else -> sqrt(x*x + y*y)\n        }\n    }\n\n    fun norm(quite: Boolean = false): Vector {\n        if (x == 0.0 && y == 0.0) {\n            if (quite) return this else throw ZeroLengthVector(\"A zero vector cannot be normalized\")\n        }\n        normalize()\n        return this\n    }\n\n    private fun normalize() {\n        // here the |vector| should be > 0 !!!\n        when {\n            (x == 0.0) -> y = if (y > 0) 1.0 else -1.0\n            (y == 0.0) -> x = if (x > 0) 1.0 else -1.0\n            else -> {\n                val l = len\n                x /= l\n                y /= l\n            }\n        }\n        cachedLen = 1.0\n    }\n\n    companion object {\n        const val angle_0  : Double =  0.0\n        const val angle_90 : Double =  PI / 2\n        const val angle_180: Double =  PI / 2\n        const val angle_270: Double = -PI / 2\n    }\n\n}\n\nfun v()                     = Vector()\nfun v(x: Double, y: Double) = Vector(x, y)\nfun v(x: Float,  y: Float)  = Vector(x.toDouble(), y.toDouble())\nfun v(x: Long,   y: Long)   = Vector(x.toDouble(), y.toDouble())\nfun v(x: Int,    y: Int)    = Vector(x.toDouble(), y.toDouble())\nfun v(x: Int,    y: Double) = Vector(x.toDouble(), y)\nfun v(x: Int,    y: Float)  = Vector(x.toDouble(), y.toDouble())\nfun v(x: Int,    y: Long)   = Vector(x.toDouble(), y.toDouble())\nfun v(x: Double, y: Int)    = Vector(x,            y.toDouble())\nfun v(x: Float,  y: Int)    = Vector(x.toDouble(), y.toDouble())\nfun v(x: Long,   y: Int)    = Vector(x.toDouble(), y.toDouble())\nfun randomVector() = v(nextDouble(-1.0, 1.0), nextDouble(-1.0, 1.0)).norm()\n\nval vUp        = v(0,-1)\nval vUpRight   = v(1,-1).norm()\nval vRight     = v(1,0)\nval vDownRight = v(1,1).norm()\nval vDown      = v(0,1)\nval vDownLeft  = v(-1,1).norm()\nval vLeft      = v(-1,0)\nval vUpLeft    = v(-1,-1).norm()\n\ndata class Frame(\n    val p0: Vector,\n    val p1: Vector\n) {\n    val width: Double = p1.x - p0.x\n    val height: Double = p1.y - p0.y\n    //val center = (p1 - p0) / 2\n\n    companion object {\n        fun square(size: Double): Frame {\n            val r = size/2\n            return Frame( v(-r,-r), v(r,r) )\n        }\n    }\n}\n","package tga.gaming.engine.model\n\nclass ZeroLengthVector(message: String? = null, cause: Throwable? = null) : RuntimeException(message, cause)\n","package tga.gaming.engine.render\n\nimport org.w3c.dom.CanvasRenderingContext2D\nimport org.w3c.dom.HTMLCanvasElement\nimport tga.gaming.engine.dispatcher.GameObjects\nimport tga.gaming.engine.model.Drawable\n\nclass HtmlCanvas2dRenderer(\n    val canvas: HTMLCanvasElement,\n    val gameObjects: GameObjects\n) : GameRenderer {\n\n    val ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\")!! as CanvasRenderingContext2D\n    val width = canvas.width\n    val height = canvas.height\n\n    override fun paint() {\n        canvas.width = canvas.width\n\n        gameObjects.objects.forEach {\n            if (it is Drawable) {\n                ctx.setTransform(1.0, 0.0, 0.0, 1.0, 0.0, 0.0)\n                ctx.lineWidth = 1.0\n                ctx.translate(it.p.x, it.p.y)\n                if (it.scale != 1.0) ctx.scale(it.scale, it.scale)\n                if (it.angle != 0.0) ctx.rotate(it.angle)\n                it.draw(ctx)\n            }\n        }\n\n        ctx.setTransform(1.0, 0.0, 0.0, 1.0, 0.0, 0.0)\n    }\n}\n","package tga.gaming.engine.shapes\n\nimport org.w3c.dom.CanvasRenderingContext2D\nimport org.w3c.dom.CanvasTextBaseline\nimport org.w3c.dom.TOP\nimport tga.gaming.engine.GameWord\nimport tga.gaming.engine.index.gridStepD\nimport tga.gaming.engine.model.Drawable\nimport tga.gaming.engine.model.Obj\n\n\nfun GameWord.withIndexGrid(\n    colorPassive: String = \"#443c38\",\n    colorActive: String = \"#886134\"\n): IndexGrid {\n    return dispatcher.addObj(IndexGrid(colorPassive, colorActive))\n}\n\nclass IndexGrid(\n    val colorPassive: String,\n    val colorActive: String\n) : Obj(frame = null), Drawable {\n\n    override fun draw(ctx: CanvasRenderingContext2D) {\n\n        val index = this.dispatcher.index\n        val size = gridStepD\n        var y = 0.0\n        for (l in 0 until index.lines) {\n            var x = 0.0\n            for (c in 0 until index.columns) {\n                ctx.beginPath()\n                val count = index.matrix[l][c].size\n                ctx.strokeStyle = if ( count > 0) colorActive else colorPassive\n                val x0 = x+2\n                val y0 = y+2\n\n                ctx.lineWidth = 0.5\n                ctx.strokeText(\"$count\",x0+3,y0+3)\n                ctx.textBaseline = CanvasTextBaseline.TOP\n                ctx.lineWidth = 2.0\n                ctx.rect(x0,y0, size-4,size-4)\n                ctx.stroke()\n                x += size\n            }\n            y += size\n        }\n\n\n    }\n}\n","package tga.gaming.engine.shapes\n\nimport org.w3c.dom.pointerevents.PointerEvent\nimport tga.gaming.engine.GameWord\nimport tga.gaming.engine.dispatcher.SimpleEventsListener\nimport tga.gaming.engine.model.*\n\nfun GameWord.withPointer(): Pointer = dispatcher.addObj( Pointer() )\n\nclass Pointer : Obj(r = 0.0), Moveable, SimpleEventsListener, CompositeDrawer {\n\n    override val drawers = mutableListOf<Drawer>()\n\n    var externalPointerCoordinates : Vector? = null\n        private set\n    private var externalPointerWasMoved = false\n\n    override fun move() {\n        if (externalPointerWasMoved) {\n            externalPointerCoordinates?.let{\n                p.set(it)\n            }\n            externalPointerWasMoved = false\n        }\n    }\n\n    override fun onPointerMove(pe: PointerEvent) {\n        if (externalPointerCoordinates == null) externalPointerCoordinates = v()\n        externalPointerCoordinates!!.set(pe.x, pe.y)\n        externalPointerWasMoved = true\n    }\n\n    override fun onPointerOver(pe: PointerEvent) {\n        externalPointerCoordinates = v(pe.x, pe.y)\n        externalPointerWasMoved = true\n    }\n\n    override fun onPointerOut(pe: PointerEvent) {\n        externalPointerCoordinates = null\n        externalPointerWasMoved = true\n    }\n\n}","package tga.gaming.games\n\nimport kotlinx.browser.document\nimport kotlinx.browser.window\nimport org.w3c.dom.HTMLCanvasElement\nimport org.w3c.dom.Node\nimport tga.gaming.engine.GameWord\nimport tga.gaming.engine.model.v\nimport tga.gaming.games.balloons.BalloonsGame\nimport tga.gaming.games.wiggly_worm.WigglyWorm\nimport tga.gaming.games.zombie.ZombieGame\n\nvar game: GameWord? = null\nlateinit var canvas: HTMLCanvasElement\n\nfun main() {\n    window.onload = {\n        canvas  = document.body!!.initCanvas()\n\n        document.getElementById(\"link-game-ghost\")?.addEventListener(\"click\", { switchGame(\"Ghosts\") })\n        document.getElementById(\"link-game-balloons\")?.addEventListener(\"click\", { switchGame(\"Balloons\") })\n        document.getElementById(\"link-game-wiggly\")?.addEventListener(\"click\", { switchGame(\"WigglyWorm\") })\n\n        switchGame(\"WigglyWorm\")\n\n    }\n\n    window.onresize = { canvas.resizeToWindow() }\n\n}\n\nfun switchGame(gameName: String) {\n    game?.finishGame()\n    val size = v(canvas.width, canvas.height)\n    game = when(gameName) {\n        \"Ghosts\"   -> ZombieGame(canvas, size)\n        \"Balloons\" -> BalloonsGame(canvas, size)\n        \"WigglyWorm\" -> WigglyWorm(canvas, size)\n        else -> throw RuntimeException(\"unsupported game name!\")\n    }\n    game!!.startGame()\n}\n\nfun HTMLCanvasElement.resizeToWindow(){\n    width  = window.innerWidth-20\n    height = window.innerHeight-20\n}\n\nfun Node.initCanvas(): HTMLCanvasElement {\n    val canvas = document.createElement(\"canvas\") as HTMLCanvasElement\n    canvas.width  = window.innerWidth-20\n    canvas.height = window.innerHeight-20\n    appendChild(canvas)\n\n    return canvas\n}\n\n","package tga.gaming.games.zombie\n\nimport kotlinx.browser.window\nimport org.w3c.dom.HTMLCanvasElement\nimport org.w3c.dom.events.MouseEvent\nimport tga.gaming.engine.GameWord\nimport tga.gaming.engine.dispatcher.Dispatcher\nimport tga.gaming.engine.dispatcher.ObjectsDispatcher\nimport tga.gaming.engine.index.ObjectsSquareIndex\nimport tga.gaming.engine.index.gridStep\nimport tga.gaming.engine.index.gridStepD\nimport tga.gaming.engine.model.Vector\nimport tga.gaming.engine.model.v\nimport tga.gaming.engine.render.HtmlCanvas2dRenderer\nimport tga.gaming.games.zombie.objects.Ghost\nimport tga.gaming.games.zombie.objects.KotlinSign\nimport tga.gaming.games.zombie.objects.playerObj\nimport kotlin.random.Random.Default.nextDouble\n\nclass ZombieGame(\n    canvas: HTMLCanvasElement,\n    val wordSize: Vector,\n    dsp: Dispatcher = ObjectsDispatcher(ObjectsSquareIndex(wordSize))\n): GameWord(\n    canvas = canvas,\n    dispatcher = dsp,\n    renderer = HtmlCanvas2dRenderer(canvas, dsp),\n    turnDurationMillis = 20\n) {\n\n    val t = gridStep * 3.5\n\n    private val player = playerObj(wordSize / 2, wordSize)\n\n    override fun startGame() {\n        //dispatcher.addObj(IndexGrid(\"#443c38\", \"#886134\"))\n\n        val d = gridStepD/2\n        dispatcher.addObj(\n            KotlinSign(\n                p = wordSize - v(d,d),\n                speed = 0.08,\n                r = (gridStepD / 2.0) / 2\n            )\n        )\n        dispatcher.addObj(player)\n\n        dispatcher.addObj( Ghost( v(0,0), player) )\n        dispatcher.addObj( Ghost( wordSize.copy(), player) )\n        dispatcher.addObj( Ghost( wordSize.copy(x = 0.0), player) )\n        dispatcher.addObj( Ghost( wordSize.copy(y = 0.0), player) )\n\n        super.startGame()\n\n        window.setInterval(timeout = 500, handler = this::ifPlay)\n    }\n\n    private fun ifPlay() {\n        if (player.visibility <= 0) {\n\n            player.imagesDrawer.nextImage()\n            if (player.imagesDrawer.imageIndex == 0) {\n                this.pause()\n            } else {\n                player.visibility = player.maxVisibility\n            }\n\n        } else {\n\n            if (nextDouble() < 0.1) {\n                dispatcher.addObj(\n                    KotlinSign(\n                        v(\n                            x = nextDouble(wordSize.x),\n                            y = nextDouble(wordSize.y)\n                        )\n                    )\n                )\n\n            }\n\n            if (this.dispatcher.objects.size < 1000) {\n                dispatcher.addObj(\n                    Ghost(\n                        v(\n                            x = nextDouble(wordSize.x),\n                            y = nextDouble(wordSize.y)\n                        ),\n                        player\n                    )\n                )\n            }\n        }\n\n    }\n\n    override fun propagateOnClick(me: MouseEvent) {\n        println(\"mouseEvent.button = ${me.button}\")\n        dispatcher.addObj( Ghost(v(me.x, me.y), player) )\n        super.propagateOnClick(me)\n    }\n}\n\n","package tga.gaming.games.balloons\n\nimport org.w3c.dom.CanvasRenderingContext2D\nimport org.w3c.dom.HTMLCanvasElement\nimport org.w3c.dom.events.MouseEvent\nimport tga.gaming.engine.GameWord\nimport tga.gaming.engine.dispatcher.Dispatcher\nimport tga.gaming.engine.dispatcher.ObjectsDispatcher\nimport tga.gaming.engine.dispatcher.SimpleEventsListener\nimport tga.gaming.engine.drawers.ObjPositionDrawer.Companion.PI2\nimport tga.gaming.engine.index.ObjectsSquareIndex\nimport tga.gaming.engine.index.gridStepD\nimport tga.gaming.engine.model.*\nimport tga.gaming.engine.render.HtmlCanvas2dRenderer\nimport tga.gaming.engine.shapes.Pointer\nimport tga.gaming.engine.shapes.withIndexGrid\nimport tga.gaming.engine.shapes.withPointer\nimport kotlin.math.cos\nimport kotlin.math.sin\nimport kotlin.random.Random.Default.nextDouble\nimport kotlin.random.Random.Default.nextInt\n\nprivate const val show2dIndexGrid = false\nprivate const val surfaceCoefficient: Int = 1000\n\nprivate const val speedFixPart = 0.2\nprivate const val speedRandomPart = 1.2\n\nprivate const val mouseRotationSpeed = 0.020\nprivate const val mouseRotationRadius = 70.0\n\nprivate const val growSpeed: Double = 2.5\nprivate const val deGrowSpeed: Double = growSpeed / 2.0\nprivate const val maxR: Double = 60.0\n\n\nclass BalloonsGame(\n    canvas: HTMLCanvasElement,\n    private var wordSize: Vector,\n    dsp: Dispatcher = ObjectsDispatcher(ObjectsSquareIndex(wordSize))\n): GameWord(\n    canvas = canvas,\n    dispatcher = dsp,\n    renderer = HtmlCanvas2dRenderer(canvas, dsp),\n    turnDurationMillis = 20\n) {\n\n    override fun startGame() {\n        initObjects()\n        super.startGame()\n    }\n\n    private fun initObjects() {\n        if (show2dIndexGrid) withIndexGrid()\n\n        val pointer = withPointer()\n\n        dispatcher.addObj(\n            MagnifyingGlass(wordSize/2, r=gridStepD*1.5, pointer = pointer)\n        )\n\n        generateCircles( (wordSize.x * wordSize.y).toInt() / surfaceCoefficient )\n    }\n\n    private fun generateCircles(numberOfCircles: Int) {\n        val r = 5.0\n        val wholeWordSize = Frame( v(r,r), wordSize.copy() - v(r,r) )\n        val offset = v(gridStepD/2, gridStepD/2)\n        val dx = wordSize.x - gridStepD\n        val dy = wordSize.y - gridStepD\n        val colors = colorsArray[nextInt(colorsArray.size)]\n\n        for (i in 0..numberOfCircles) {\n            dispatcher.addObj(\n                Circle(\n                    p = v(nextDouble(dx), nextDouble(dy)) + offset,\n                    r = r,\n                    color = colors[ nextInt(colors.size) ],\n                    area = wholeWordSize,\n                    speedLength = speedFixPart + nextDouble(0.0, speedRandomPart)\n                )\n            )\n        }\n\n    }\n\n    companion object {\n        val colorsArray = arrayOf(\n            arrayOf(\"#FF5F5D\",\"#3F7C85\",\"#00CCBF\",\"#72F2EB\",\"#747E7E\"),\n            arrayOf(\"#012030\",\"#13678A\",\"#45C4B0\",\"#9AEBA3\",\"#DAFDBA\"),\n            arrayOf(\"#151F30\",\"#103778\",\"#0593A2\",\"#FF7A48\",\"#E3371E\"),\n            arrayOf(\"#105057\",\"#898C8B\",\"#FF81D0\",\"#400036\",\"#919151\"),\n            arrayOf(\"#146152\",\"#44803F\",\"#B4CF66\",\"#FFEC5C\",\"#FF5A33\"),\n            arrayOf(\"#662400\",\"#B33F00\",\"#FF6B1A\",\"#006663\",\"#00B3AD\"),\n        )\n    }\n}\n\nprivate class Circle(\n    p: Vector,\n    r: Double,\n    private val color: String,\n    private val area: Frame,\n    speedLength: Double,\n) : Obj(p = p, r = r), CompositeDrawer, Moveable, Actionable {\n\n    val minR = r\n    var speed = randomVector() * speedLength\n    var addSpeed: Vector? = null\n\n    override val drawers = mutableListOf<Drawer>()\n\n    override fun draw(ctx: CanvasRenderingContext2D) {\n        ctx.beginPath()\n        ctx.fillStyle = color\n        ctx.arc(x = 0.0, y = 0.0, radius = r, startAngle = 0.0, endAngle =  PI2)\n        ctx.fill()\n\n        super.draw(ctx)\n    }\n\n    override fun move() {\n        p += speed\n        addSpeed?.let{ p += it }\n        if (p.x < area.p0.x && speed.x < 0) { speed.x = -speed.x; addSpeed?.let{it.x = -it.x} }\n        if (p.x > area.p1.x && speed.x > 0) { speed.x = -speed.x; addSpeed?.let{it.x = -it.x} }\n        if (p.y < area.p0.y && speed.y < 0) { speed.y = -speed.y; addSpeed?.let{it.y = -it.y} }\n        if (p.y > area.p1.y && speed.y > 0) { speed.y = -speed.y; addSpeed?.let{it.y = -it.y} }\n    }\n\n    override fun act() {\n        if (r > minR) r -= deGrowSpeed\n        if (r < minR) r = minR\n\n        if (addSpeed != null) {\n            addSpeed = if (addSpeed!!.len > 0.001) addSpeed!! * 0.99 else null\n        }\n    }\n}\n\n\nprivate class MagnifyingGlass(p: Vector, r: Double, val pointer: Pointer) : Obj(p = p, r = r),\n    Moveable, Actionable, SimpleEventsListener\n{\n    var t: Double = 0.0\n    override fun move() {\n        val position = pointer.externalPointerCoordinates ?: pointer.p\n        position.let {\n            t += mouseRotationSpeed\n            if (t > PI2) t -= PI2\n            val offset = v(sin(t), cos(t)) * mouseRotationRadius\n            p.set(it + offset)\n        }\n    }\n\n    override fun act() {\n        dispatcher.index.objectsOnTheSamePlaceWith(this).forEach {\n            if (it is Circle) {\n                val len = (it.p - p).len\n                if (len < r) {\n                    if (it.r < maxR) it.r += growSpeed\n                    if (it.r > maxR) it.r = maxR\n                }\n            }\n        }\n    }\n\n    override fun onClick(me: MouseEvent) {\n        dispatcher.index.objectsOnTheSamePlaceWith(this).forEach {\n            if (it is Circle) {\n                val len = (it.p - p).len\n                if (len < r) {\n                    it.addSpeed = it.speed.copy().norm() * 9.0\n                }\n            }\n        }\n    }\n\n}\n","package tga.gaming.games.wiggly_worm\n\nimport org.w3c.dom.*\nimport tga.gaming.engine.GameWord\nimport tga.gaming.engine.dispatcher.Dispatcher\nimport tga.gaming.engine.dispatcher.ObjectsDispatcher\nimport tga.gaming.engine.index.ObjectsSquareIndex\nimport tga.gaming.engine.model.*\nimport tga.gaming.engine.render.HtmlCanvas2dRenderer\nimport kotlin.math.PI\nimport kotlin.math.cos\nimport kotlin.math.sin\n\nprivate const val d = PI/180\n\nclass WigglyWorm(\n    canvas: HTMLCanvasElement,\n    val wordSize: Vector,\n    dsp: Dispatcher = ObjectsDispatcher(ObjectsSquareIndex(wordSize))\n): GameWord(\n    canvas = canvas,\n    dispatcher = dsp,\n    renderer = HtmlCanvas2dRenderer(canvas, dsp),\n    turnDurationMillis = 20\n) {\n\n    lateinit var worm: Worm\n\n    override fun startGame() {\n        addObjects()\n        super.startGame()\n    }\n\n    private fun addObjects() {\n        worm = dispatcher.addObj( Worm( v(wordSize.x/5*3, wordSize.y/2) ) )\n    }\n}\n\nclass Worm(p:Vector): Obj(p=p, r=30.0),\n    CompositeDrawer, Moveable\n{\n    override val drawers = mutableListOf<Drawer>()\n\n    var da: Double = d*12\n    private val body: MutableList<Vector> = ArrayList<Vector>().apply {\n        repeat(20){ add(p.copy()) }\n    }\n\n\n    init {\n        positions()\n    }\n\n    private fun positions() {\n        var center = p.copy()\n        val rotateTo = -da\n        var a = PI\n\n        for (i in 0 until body.size) {\n            body[i].set(center)\n            val offset = v(cos(a), sin(a)) * r\n            center = center + offset\n            a += rotateTo\n        }\n\n    }\n\n    var t: Double = 0.0\n    var dt: Double = 0.05\n\n    override fun move() {\n        t += dt\n\n        val k = sin(t)\n        da = (d * 17) * k\n\n        positions()\n    }\n\n    override fun draw(ctx: CanvasRenderingContext2D) {\n        drawWarm(ctx)\n        //drawCircles(ctx)\n        super.draw(ctx)\n    }\n\n/*\n    private fun drawCircles(ctx: CanvasRenderingContext2D) {\n        ctx.setTransform(1.0, 0.0, 0.0, 1.0, 0.0, 0.0)\n        ctx.strokeStyle = \"aquamarine\"\n        ctx.lineWidth = 1.0\n        ctx.lineJoin = CanvasLineJoin.ROUND\n\n        for(b in body) {\n            ctx.beginPath()\n            ctx.arc(x=b.x, y=b.y, radius = r, startAngle = 0.0, endAngle = PI2, anticlockwise = false)\n            ctx.stroke()\n        }\n    }\n*/\n\n    fun drawWarm(ctx: CanvasRenderingContext2D) {\n        ctx.setTransform(1.0, 0.0, 0.0, 1.0, 0.0, 0.0)\n\n        val `2 pi / 3` = 2.0*PI/3\n        val `pi / 3` = PI/3\n\n        ctx.lineWidth = 5.0\n        ctx.lineJoin = CanvasLineJoin.BEVEL\n\n        val path = Path2D()\n\n        ctx.beginPath()\n        val bs = body.first()\n        path.arc(\n            x = bs.x, y = bs.y, radius = r,\n            startAngle = `2 pi / 3`,\n            endAngle = -`2 pi / 3`,\n            anticlockwise = true\n        )\n\n        var a = 0.0\n\n        for(i in 1 until body.size-1) {\n            val b = body[i]\n            path.arc(\n                x = b.x, y = b.y, radius = r,\n                startAngle = -`pi / 3` - a,\n                endAngle = -`2 pi / 3` - (a+da),\n                anticlockwise = true\n            )\n            a += da\n        }\n\n        val be = body.last()\n        path.arc(\n            x = be.x, y = be.y, radius = r,\n            startAngle = - `pi / 3` - a,\n            endAngle = `pi / 3` - a,\n            anticlockwise = true\n        )\n\n        for(i in body.size-2 downTo 1 ) {\n            val b = body[i]\n            path.arc(\n                x = b.x, y = b.y, radius = r,\n                startAngle = `2 pi / 3` - a,\n                endAngle = `pi / 3` - (a-da),\n                anticlockwise = true\n            )\n            a -= da\n        }\n\n        path.arc(\n            x = bs.x, y = bs.y, radius = r,\n            startAngle = `2 pi / 3`,\n            endAngle = 0.0,\n            anticlockwise = true\n        )\n\n        ctx.strokeStyle = \"#D8B08C\"\n        ctx.fillStyle = \"#0F6466\"\n        ctx.fill(path)\n        ctx.stroke(path)\n    }\n}\n",null,null,"package tga.gaming.games.zombie.objects\n\nimport tga.gaming.engine.drawers.withImageDrawer\nimport tga.gaming.engine.image.loadImage\nimport tga.gaming.engine.index.gridStepD\nimport tga.gaming.engine.model.*\nimport kotlin.math.PI\nimport kotlin.math.sin\n\nclass KotlinSign(\n    p: Vector = v(),\n    private val speed: Double = 0.05,\n    r: Double = gridStepD-5.0\n) : Obj(p = p, r = r),\n    CompositeDrawer,\n    Actionable\n{\n    override val drawers = mutableListOf<Drawer>()\n    private var t = 0.0\n\n    init {\n        withImageDrawer(loadImage(\"/game/zombie/img/kotlin-logo.svg\"))\n    }\n\n    override fun act() {\n        t += speed\n        angle = amplitude * sin(t)\n    }\n\n    companion object {\n        const val amplitude = PI /4\n    }\n}\n","package tga.gaming.games.zombie.objects\n\nimport org.w3c.dom.CanvasRenderingContext2D\nimport org.w3c.dom.events.KeyboardEvent\nimport org.w3c.dom.events.MouseEvent\nimport tga.gaming.engine.dispatcher.SimpleEventsListener\nimport tga.gaming.engine.drawers.withImagesDrawer\nimport tga.gaming.engine.image.loadImages\nimport tga.gaming.engine.index.gridStepD\nimport tga.gaming.engine.model.*\nimport tga.gaming.engine.model.Vector.Companion.angle_90\nimport kotlin.math.PI\n\nfun playerObj(\n    p: Vector,\n    bounds: Vector\n): PlayerObj {\n    val player = PlayerObj(p, bounds = bounds).apply {\n        //withObjFrameDrawer()\n        //withObjPositionDrawer()\n    }\n    return player\n}\n\nclass PlayerObj(\n    p: Vector,\n    r: Double = gridStepD-1,\n    override var frame: Frame = Frame.square(r),\n    val bounds: Vector\n) : Obj(p = p, r = r),\n    CompositeDrawer,\n    SimpleEventsListener,\n    Moveable,\n    Actionable\n{\n    override val drawers = ArrayList<Drawer>()\n\n    private var direction: Vector = v(1,0)\n    private var speed: Vector? = null\n\n    private var isUpKeyPressed    = false\n    private var isRightKeyPressed = false\n    private var isDownKeyPressed  = false\n    private var isLeftKeyPressed  = false\n\n    val maxVisibility: Double = 100.0\n    var visibility: Double = maxVisibility\n\n    val imagesDrawer = withImagesDrawer(playerImages)\n    override fun draw(ctx: CanvasRenderingContext2D) {\n        ctx.globalAlpha = when {\n                visibility <= 0 -> 0.0\n                visibility > 0 && visibility <= maxVisibility -> visibility / maxVisibility\n                else -> 1.0\n            }\n        super.draw(ctx)\n        ctx.globalAlpha = 1.0\n    }\n\n    override fun onMouseMove(me: MouseEvent) {\n        val toMouse = v(me.x - p.x, me.y - p.y)\n        direction.set(toMouse.norm())\n        angle = direction.angle()\n        when {\n            (angle >  angle_90) -> angle += PI\n            (angle < -angle_90) -> angle += PI\n        }\n    }\n\n    override fun onKeyDown(ke: KeyboardEvent) {\n        when (ke.code) {\n            \"KeyW\" -> if (!isUpKeyPressed )   { isUpKeyPressed    = true; updateSpeed() }\n            \"KeyD\" -> if (!isRightKeyPressed) { isRightKeyPressed = true; updateSpeed() }\n            \"KeyS\" -> if (!isDownKeyPressed ) { isDownKeyPressed  = true; updateSpeed() }\n            \"KeyA\" -> if (!isLeftKeyPressed ) { isLeftKeyPressed  = true; updateSpeed() }\n        }\n    }\n\n    override fun onKeyUp(ke: KeyboardEvent) {\n        when (ke.code) {\n            \"KeyW\" -> if (isUpKeyPressed)    { isUpKeyPressed    = false; updateSpeed() }\n            \"KeyD\" -> if (isRightKeyPressed) { isRightKeyPressed = false; updateSpeed() }\n            \"KeyS\" -> if (isDownKeyPressed)  { isDownKeyPressed  = false; updateSpeed() }\n            \"KeyA\" -> if (isLeftKeyPressed)  { isLeftKeyPressed  = false; updateSpeed() }\n        }\n    }\n\n    private fun updateSpeed() {\n        val dx: Int = when {\n            isRightKeyPressed == isLeftKeyPressed -> 0\n            isRightKeyPressed                     -> 1\n            isLeftKeyPressed                      -> -1\n            else                                  -> 0\n        }\n\n        val dy: Int = when {\n            isUpKeyPressed == isDownKeyPressed -> 0\n            isDownKeyPressed                   -> 1\n            isUpKeyPressed                     -> -1\n            else                               -> 0\n        }\n\n        when {\n            dx ==  0 && dy ==  0 -> speed = null\n            dx ==  0 && dy == -1 -> speed = vUp * 5\n            dx ==  1 && dy == -1 -> speed = vUpRight * 5\n            dx ==  1 && dy ==  0 -> speed = vRight * 5\n            dx ==  1 && dy ==  1 -> speed = vDownRight * 5\n            dx ==  0 && dy ==  1 -> speed = vDown * 5\n            dx == -1 && dy ==  1 -> speed = vDownLeft * 5\n            dx == -1 && dy ==  0 -> speed = vLeft * 5\n            dx == -1 && dy == -1 -> speed = vUpLeft * 5\n        }\n\n    }\n\n    override fun onClick(me: MouseEvent) {\n        imagesDrawer.nextImage()\n    }\n\n    override fun move() {\n        if (speed != null) {\n            p += speed!!\n            if (p.x > bounds.x) p.x = bounds.x else if (p.x < 0.0) p.x = 0.0\n            if (p.y > bounds.y) p.y = bounds.y else if (p.y < 0.0) p.y = 0.0\n        }\n    }\n\n    override fun act() {\n        if (visibility > 0) {\n            dispatcher.index.objectsOnTheSamePlaceWith(this).forEach {\n                when (it) {\n                    is Ghost -> {\n                        visibility -= 10\n                        dispatcher.delObj(it)\n                    }\n                    is KotlinSign -> {\n                        dispatcher.delObj(it)\n                        visibility = maxVisibility\n                    }\n\n                }\n            }\n        }\n    }\n\n    companion object {\n        val playerImages = loadImages(\"/game/zombie/img/actor<n>.png\", 11)\n    }\n}\n\n","package tga.gaming.games.zombie.objects\n\nimport tga.gaming.engine.drawers.withImagesDrawer\nimport tga.gaming.engine.image.loadImages\nimport tga.gaming.engine.index.gridStepD\nimport tga.gaming.engine.model.*\nimport kotlin.random.Random.Default.nextInt\n\nclass Ghost (\n    p: Vector,\n    private val player: PlayerObj,\n    r: Double = gridStepD -1,\n    override var frame: Frame = Frame.square(r),\n) : Obj(p = p, r=r),\n    CompositeDrawer,\n    Moveable\n{\n    override val drawers = ArrayList<Drawer>()\n    private var speed: Vector? = (player.p - p)\n\n    private var maxSpeedLen = 5.0\n    private var speedLen = 0.5\n\n    init {\n        angle = (player.p - p).angle()\n        withImagesDrawer(ghostImages, nextInt(6))\n        // withObjPositionDrawer(strokeStyle = \"#AD559AFF\")\n        // withObjFrameDrawer(strokeStyle = \"#AD559AFF\")\n    }\n\n    private var speedDirectionTurnsCounter = 0\n    override fun move() {\n        if (speedLen < maxSpeedLen) { speedLen += 0.0005; speed?.assignLength(speedLen) }\n\n        speedDirectionTurnsCounter++\n        if (speedDirectionTurnsCounter == 50) {\n            speedDirectionTurnsCounter = 0\n            speed = (player.p - p).assignLength(speedLen)\n            angle = speed!!.angle()\n        }\n\n        speed?.let{ p += it}\n    }\n\n    companion object {\n        val ghostImages = loadImages(\"game/zombie/img/gost-<n>.gif\", 6)\n    }\n\n}\n",null,null,"package tga.gaming.engine.index\n\nimport tga.gaming.engine.model.Obj\n\ninterface SquareIndex {\n\n    val lines  : Int\n    val columns: Int\n    val matrix: Array<Array<MutableSet<Obj>>>\n\n    fun update(objects: Collection<Obj>) {\n        objects.forEach { update(it) }\n    }\n\n    fun update(obj: Obj)\n\n    fun remove(objects: Collection<Obj>) {\n        objects.forEach { remove(it) }\n    }\n\n    fun remove(obj: Obj)\n\n    fun objectsOnTheSamePlaceWith(obj: Obj): Sequence<Obj>\n\n    fun reset()\n\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(31);\n"],"names":["root","factory","exports","module","define","amd","this","ctx","window","me","pe","ke","ImagesDrawer","imageIndex","images","a","imagesDrawer","image","path","document","createElement","src","loadImage","except","forEach","body","l","c","lin","line","cell","wordSize","Frame","r","Vector","x","y","message","cause","getContext","width","height","game","gameName","ObjectsDispatcher","ObjectsSquareIndex","size","canvas","innerWidth","innerHeight","appendChild","initCanvas","getElementById","addEventListener","switchGame","Pointer","MagnifyingGlass","pointer","numberOfCircles","i","Circle","dx","dy","offset","colors","wholeWordSize","generateCircles","GameWord","dsp","HtmlCanvas2dRenderer","p","speedLength","center","rotateTo","positions","v","loadImages","withImagesDrawer","listOf","img","console","log","runEventListeners","setInterval","setTimeout","performance","now","clearInterval","code","requestAnimationFrame","addNewObjects","oldPosition","doMove","doAct","removeDeletedObjects","obj","first","last","drawImage","f","frame","position","l0","y0","c0","x0","l1","y1","c1","x1","PositionsRange2D","rangeOfObject","prev","curr","forEachExcept","it","emptySequence","positionsRange","asSequence","objects","filter","other","hashCode","calculateLength","n","desiredLength","k","quite","normalize","setTransform","translate","scale","rotate","index","beginPath","strokeStyle","count","lineWidth","strokeText","textBaseline","rect","stroke","initObjects","fillStyle","arc","fill","draw","Worm","lineJoin","Path2D","bs","b","be","KotlinSign","d","println","button","globalAlpha","toMouse","updateSpeed","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}